---
apiVersion: apps/v1
kind: DaemonSet

metadata:
  name: nginx-controller
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/component: controller

spec:
  revisionHistoryLimit: 10
  minReadySeconds: 0

  updateStrategy:
    type: RollingUpdate

  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/component: controller

  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/component: controller

    spec:
      serviceAccountName: nginx-controller
      terminationGracePeriodSeconds: 300
      dnsPolicy: ClusterFirst

      containers:
        - name: server
          image: nginx-controller
          imagePullPolicy: IfNotPresent

          lifecycle:
            preStop:
              exec:
                command:
                  - /wait-shutdown

          args:
            - /nginx-ingress-controller
            - --default-backend-service=$(POD_NAMESPACE)/nginx-backend
            - --default-server-port=8080
            - --enable-ssl-passthrough
            - --ingress-class=nginx
            - --publish-service=$(POD_NAMESPACE)/nginx-ingress
            - --configmap=$(POD_NAMESPACE)/nginx-config
            - --tcp-services-configmap=$(POD_NAMESPACE)/nginx-tcp
            - --udp-services-configmap=$(POD_NAMESPACE)/nginx-udp
            - --validating-webhook=:8443
            - --validating-webhook-certificate=/usr/local/certificates/cert
            - --validating-webhook-key=/usr/local/certificates/key

          securityContext:
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL
            runAsUser: 101
            allowPrivilegeEscalation: true

          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace

            - name: LD_PRELOAD
              value: /usr/local/lib/libmimalloc.so

          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
            - name: metrics
              containerPort: 10254
              protocol: TCP
            - name: webhook
              containerPort: 8443
              protocol: TCP

          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics

          readinessProbe:
            httpGet:
              path: /healthz
              port: metrics

          volumeMounts:
            - name: webhook
              mountPath: /usr/local/certificates/
              readOnly: true

      volumes:
        - name: webhook
          secret:
            secretName: nginx-webhook

...
